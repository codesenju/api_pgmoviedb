# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexv2
  namespace: api
  labels:
    app: indexv2
spec:
  selector:
    matchLabels:
      app: indexv2
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: indexv2
    spec:
      serviceAccount: envoy-proxy
#      nodeSelector:
#       karpenter.sh/provisioner-name: arm-fleet
      containers:
      - name: indexv2
        image: codesenju/index.api.local:v2
        imagePullPolicy: Always
        env:
        - name: MOVIES_URL
          value: 'http://nodeapi:3000/api/v1/movies/'
        - name: TVSERIES_URL
          value: 'http://nodeapi:3000/api/v1/tvseries/'
        - name: TVMINISERIES_URL
          value: 'http://nodeapi:3000/api/v1/tvminiseries/'
        - name: INDEX_BACKEND_URL
          value: 'http://index-backend:5000/'
        ports:
        - containerPort: 5000
          name: indexv2-5000
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 10
          timeoutSeconds: 60
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 10
          timeoutSeconds: 60
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
#############
## SERVICE ##
#############
---
apiVersion: v1
kind: Service
metadata:
#  name: index-nlb
  name: indexv2
  namespace: api
#  # Create a service with an internet-facing Network Load Balancer that load balances to IP targets
#  # https://docs.aws.amazon.com/eks/latest/userguide/network-load-balancing.html#network-load-balancer
#  # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/nlb/
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: external
#    # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
#    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
#    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
#    service.beta.kubernetes.io/aws-load-balancer-name: index-nlb # Optional
#    # service.beta.kubernetes.io/aws-load-balancer-healthcheck-path:
#    ## https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/annotations/#subnets
#    ##service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-0afa2013429dcf39d, subnet-059f8983857cffa5e
spec:
  ports:
    - port: 5000 # same as listener port if using as AWS NLB
      targetPort: 5000
      protocol: TCP
#  type: LoadBalancer
  type: ClusterIP
  selector:
    app: indexv2
