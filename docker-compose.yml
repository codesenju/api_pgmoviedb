version: "3.3"
networks:
  devops:
    driver: bridge
volumes:
  PGDATA:
  redis-data:
services:
  movie-search:
    image:  codesenju/movie-search.api.local:latest
    build: ./movie-search
    container_name: movie-search
    networks:
      - devops
    ports:
      - 3000:3000
  pgmoviedb:
    image:  codesenju/pgmoviedb.api.local:latest
    build: ./postgres
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
       POSTGRES_DB: movie
       POSTGRES_PASSWORD: 12345
    volumes:
       - PGDATA:/var/lib/postgresql/data
    networks:
      - devops
    ports:
      - 5432:5432
  nodeapi:
    image:   codesenju/nodeapi.api.local:latest
    build: ./nodeapi
    container_name: nodeapi
    environment:
       DB_HOST: pgmoviedb
       DB_PASSWORD: 12345
       DB_NAME: movie
       DB_PORT: 5432
       DB_USERNAME: postgres
    restart: unless-stopped
    depends_on:
      - pgmoviedb
    networks:
      - devops
#    ports:
#      - 3000:3000
  index:
    image:  codesenju/index.api.local:v1
    build: ./index.api.local
    container_name: index
    restart: unless-stopped
    environment:
       MOVIES_URL: 'http://nodeapi:3000/api/v1/movies/'
       TVSERIES_URL: 'http://nodeapi:3000/api/v1/tvseries/'
       TVMINISERIES_URL: 'http://nodeapi:3000/api/v1/tvminiseries/'
       INDEX_BACKEND_URL: 'http://index-backend:5000/'
    networks:
      - devops
#    ports:
#      - 81:5000
  indexv2:
    image:  codesenju/index.api.local:v2
    build: ./indexv2.api.local
    container_name: indexv2
    restart: unless-stopped
    environment:
       MOVIES_URL: 'http://nodeapi:3000/api/v1/movies/'
       TVSERIES_URL: 'http://nodeapi:3000/api/v1/tvseries/'
       TVMINISERIES_URL: 'http://nodeapi:3000/api/v1/tvminiseries/'
       INDEX_BACKEND_URL: 'http://index-backend:5000/'
    networks:
      - devops
#    ports:
#      - 82:5000
  indexv3:
    image:  codesenju/index.api.local:v3
    build: ./indexv3.api.local
    container_name: indexv3
    restart: unless-stopped
    environment:
       MOVIES_URL: 'http://nodeapi:3000/api/v1/movies/'
       TVSERIES_URL: 'http://nodeapi:3000/api/v1/tvseries/'
       TVMINISERIES_URL: 'http://nodeapi:3000/api/v1/tvminiseries/'
       INDEX_BACKEND_URL: 'http://index-backend:5000/'
    networks:
      - devops
#    ports:
#      - 83:5000
  frontend:
    image:  codesenju/frontend.api.local:latest
    build: ./frontend.api.local
    container_name: frontend
    restart: unless-stopped
    environment:
       INDEX_URL: 'http://indexv3:5000/'
    networks:
      - devops
    ports:
      - 8081:5000
  index-backend:
    image:  codesenju/index-backend.api.local:latest
    build: ./index-backend.api.local
    container_name: index-backend
    restart: unless-stopped
    environment:
      TVMINISERIES_FIFA_URL: 'http://nodeapi:3000/api/v1/tvminiseries/2022 Fifa World Cup'
      ENDGAME_URL: 'http://nodeapi:3000/api/v1/movies/Avengers: Endgame'
    networks:
      - devops
#    ports:
#      - 84:5000
#  redis:
#    image: redis:7
#    container_name: redis
#    restart: unless-stopped
#    command:
#      - redis-server
#      - --save
#      - "60" 
#      - "1" 
#      - --loglevel
#      - warning
#    networks:
#        - devops
#    volumes:
#       - redis-data:/data
#    ports:
#      - 6379:6379