{
 "Resources": {
  "ImportedTaskExecutionRolePolicy23E279F9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PostgresTaskDefPostgresLogGroup8B3E2446",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PostgresLogGroup3ED00616",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedTaskExecutionRolePolicy23E279F9",
    "Roles": [
     "ecsTaskExecutionRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/ImportedTaskExecutionRole/Policy/Resource"
   }
  },
  "ImportedEcsExecTaskRolePolicy6CAEEF74": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedEcsExecTaskRolePolicy6CAEEF74",
    "Roles": [
     "000A_ecsExecTaskRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/ImportedEcsExecTaskRole/Policy/Resource"
   }
  },
  "PGEFSFileSystemFB2674A6": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "PostgresStack/PG_EFSFileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PG_EFSFileSystem/Resource"
   }
  },
  "PGEFSFileSystemEfsMountTarget19B5123E5": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::ImportValue": "efsSGID"
     }
    ],
    "SubnetId": "subnet-01b1911df0ad91eb7"
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PG_EFSFileSystem/EfsMountTarget1"
   }
  },
  "PGEFSFileSystemEfsMountTarget28E365451": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::ImportValue": "efsSGID"
     }
    ],
    "SubnetId": "subnet-02ae900ec00be7b2f"
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PG_EFSFileSystem/EfsMountTarget2"
   }
  },
  "PGEFSFileSystemEfsMountTarget37EB7BC6C": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::ImportValue": "efsSGID"
     }
    ],
    "SubnetId": "subnet-08d2609ae2ad75bcc"
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PG_EFSFileSystem/EfsMountTarget3"
   }
  },
  "nodeE52CB09E": {
   "Type": "AWS::AppMesh::VirtualNode",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Listeners": [
      {
       "HealthCheck": {
        "HealthyThreshold": 3,
        "IntervalMillis": 5000,
        "Port": 5432,
        "Protocol": "tcp",
        "TimeoutMillis": 2000,
        "UnhealthyThreshold": 2
       },
       "PortMapping": {
        "Port": 5432,
        "Protocol": "tcp"
       },
       "Timeout": {
        "TCP": {
         "Idle": {
          "Unit": "ms",
          "Value": 5000
         }
        }
       }
      }
     ],
     "Logging": {
      "AccessLog": {
       "File": {
        "Path": "/dev/stdout"
       }
      }
     },
     "ServiceDiscovery": {
      "DNS": {
       "Hostname": "pgmoviedb.api.local"
      }
     }
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    },
    "VirtualNodeName": "pgmoviedb-node"
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/node/Resource"
   }
  },
  "pgmoviedbVirtualService5ECFAC21": {
   "Type": "AWS::AppMesh::VirtualService",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Provider": {
      "VirtualNode": {
       "VirtualNodeName": {
        "Fn::GetAtt": [
         "nodeE52CB09E",
         "VirtualNodeName"
        ]
       }
      }
     }
    },
    "VirtualServiceName": {
     "Fn::Join": [
      "",
      [
       "pgmoviedb.",
       {
        "Fn::ImportValue": "ApiNamespaceName"
       }
      ]
     ]
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/pgmoviedbVirtualService/Resource"
   }
  },
  "PostgresTaskDef8C46C666": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "DependsOn": [
       {
        "Condition": "HEALTHY",
        "ContainerName": "envoy"
       }
      ],
      "Environment": [
       {
        "Name": "POSTGRES_DB",
        "Value": "movie"
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "Value": "12345"
       }
      ],
      "Essential": true,
      "Image": "codesenju/pgmoviedb.api.local:amd",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PostgresTaskDefPostgresLogGroup8B3E2446"
        },
        "awslogs-stream-prefix": "postgres",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 2048,
      "MountPoints": [
       {
        "ContainerPath": "/var/lib/postgresql/data",
        "ReadOnly": false,
        "SourceVolume": "PGDATA"
       }
      ],
      "Name": "Postgres",
      "PortMappings": [
       {
        "ContainerPort": 5432,
        "HostPort": 5432,
        "Name": "postgres",
        "Protocol": "tcp"
       }
      ]
     },
     {
      "DependsOn": [
       {
        "Condition": "START",
        "ContainerName": "xray"
       }
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       },
       {
        "Name": "ENVOY_LOG_LEVEL",
        "Value": "debug"
       },
       {
        "Name": "ENABLE_ENVOY_STATS_TAGS",
        "Value": "1"
       },
       {
        "Name": "ENABLE_ENVOY_XRAY_TRACING",
        "Value": "1"
       },
       {
        "Name": "APPMESH_RESOURCE_ARN",
        "Value": {
         "Ref": "nodeE52CB09E"
        }
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
       ],
       "Interval": 5,
       "Retries": 10,
       "Timeout": 10
      },
      "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.25.1.0-prod",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PostgresLogGroup3ED00616"
        },
        "awslogs-stream-prefix": "/envoy-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 128,
      "Name": "envoy",
      "Ulimits": [
       {
        "HardLimit": 15000,
        "Name": "nofile",
        "SoftLimit": 15000
       }
      ],
      "User": "1337"
     },
     {
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       }
      ],
      "Essential": true,
      "Image": "amazon/aws-xray-daemon",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PostgresLogGroup3ED00616"
        },
        "awslogs-stream-prefix": "/xray-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "xray",
      "User": "1337"
     },
     {
      "Command": [
       "--config=/etc/ecs/otel-config.yaml"
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       },
       {
        "Name": "AWS_PROMETHEUS_ENDPOINT",
        "Value": "https://aps-workspaces.us-east-1.amazonaws.com/workspaces/ws-5f8b1530-3388-4177-82af-eae1c6d54d57/api/v1/remote_write"
       }
      ],
      "Essential": true,
      "Image": "codesenju/aws-otel-collector:amd",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PostgresLogGroup3ED00616"
        },
        "awslogs-stream-prefix": "/otel-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "otel"
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "PostgresStackPostgresTaskDef3C83CBE9",
    "Memory": "4096",
    "NetworkMode": "awsvpc",
    "ProxyConfiguration": {
     "ContainerName": "envoy",
     "ProxyConfigurationProperties": [
      {
       "Name": "AppPorts",
       "Value": "5432"
      },
      {
       "Name": "ProxyEgressPort",
       "Value": "15001"
      },
      {
       "Name": "ProxyIngressPort",
       "Value": "15000"
      },
      {
       "Name": "EgressIgnoredIPs",
       "Value": "169.254.170.2,169.254.169.254"
      },
      {
       "Name": "EgressIgnoredPorts",
       "Value": "2049"
      },
      {
       "Name": "IgnoredUID",
       "Value": "1337"
      }
     ],
     "Type": "APPMESH"
    },
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": "arn:aws:iam::587878432697:role/000A_ecsExecTaskRole",
    "Volumes": [
     {
      "EFSVolumeConfiguration": {
       "FilesystemId": {
        "Ref": "PGEFSFileSystemFB2674A6"
       }
      },
      "Name": "PGDATA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PostgresTaskDef/Resource"
   }
  },
  "PostgresTaskDefPostgresLogGroup8B3E2446": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PostgresTaskDef/Postgres/LogGroup/Resource"
   }
  },
  "PostgresLogGroup3ED00616": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/api/pgmoviedb",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PostgresStack/PostgresLogGroup/Resource"
   }
  },
  "PostgresService78457626": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "amd-spot-api-capasity-provider",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::ImportValue": "pgmoviedbSGID"
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "postgres",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "PostgresCloudmapService1B22969B",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "PostgresTaskDef8C46C666"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/Postgres/Service"
   }
  },
  "PostgresCloudmapService1B22969B": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::ImportValue": "ApiNamespaceId"
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "pgmoviedb",
    "NamespaceId": {
     "Fn::ImportValue": "ApiNamespaceId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/Postgres/CloudmapService/Resource"
   }
  },
  "PostgresTaskCountTarget912DD5E3": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/api/",
       {
        "Fn::GetAtt": [
         "PostgresService78457626",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::587878432697:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/Postgres/TaskCount/Target/Resource"
   }
  },
  "PostgresTaskCountTargetCpuScaling863F7E95": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "PostgresStackPostgresTaskCountTargetCpuScalingF4872F1B",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "PostgresTaskCountTarget912DD5E3"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/Postgres/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "PostgresTaskCountTargetMemoryScalingE186DD53": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "PostgresStackPostgresTaskCountTargetMemoryScaling76F2AB8A",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "PostgresTaskCountTarget912DD5E3"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/Postgres/TaskCount/Target/MemoryScaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VRy3LCMAz8Fu7GhXT4Avq40JYhmV47wlGCGsfO+EEnk/G/1yakDe1J8kratVYZ32z4agFfdinKZinpyIfcgWjYAa32RiCLtY+BoOXDXksSPdtWaswCw8ry4Ykk5r112KbS7etFe+UKMDW6wKDrWrQnPryTcR7kqy4xNc2f1zxHcyYxr16RqCmiZgG2ecCKFDnSKrX9RbRyQArNDHsU2Yx3SnMBEo4SE8E2fTcwqeuosdP1s9G+S81THpgdx0qyQp/R9NGvf5yXVaNDkGTBO22jBqk69v6IJUsuI7fIGAoTTxAH8nHu1/gbIIQEvXnX+QvVdLLA9r07aXV3z9crvs4Wn5ZoaeJq1CI/jPEbq8v3YvoBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "PostgresStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "PostgresServiceArn": {
   "Value": {
    "Ref": "PostgresService78457626"
   },
   "Export": {
    "Name": "PostgresServiceArn"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}