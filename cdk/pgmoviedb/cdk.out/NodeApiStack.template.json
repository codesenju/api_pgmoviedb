{
 "Resources": {
  "ElbSG3E53E50B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/Elb_SG",
    "GroupName": "Elb_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound ECS ephemeral port range to targets",
      "FromPort": 32768,
      "IpProtocol": "tcp",
      "ToPort": 60999
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow inbound 80 from from outside world",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Elb_SG/Resource"
   }
  },
  "ElbSGtoNodeApiStackFrontendSG15B505145000F9420D3C": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "ElbSG3E53E50B",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "FrontendSGA609D887",
      "GroupId"
     ]
    },
    "FromPort": 5000,
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Elb_SG/to NodeApiStackFrontendSG15B50514:5000"
   }
  },
  "NodeapiSGA07C109D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/Nodeapi_SG",
    "GroupName": "Nodeapi_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi_SG/Resource"
   }
  },
  "NodeapiSGfromNodeApiStackIndexSGCEC1A1943000077108E6": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow inbound 3000 from index",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "NodeapiSGA07C109D",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "IndexSGB8721386",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi_SG/from NodeApiStackIndexSGCEC1A194:3000"
   }
  },
  "NodeapiSGtoNodeApiStackPostgresSG89FF08BE5432840C38BB": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "NodeapiSGA07C109D",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Allow outbound 5432 to postgres",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "PostgresSGA5349B77",
      "GroupId"
     ]
    },
    "FromPort": 5432,
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi_SG/to NodeApiStackPostgresSG89FF08BE:5432"
   }
  },
  "PostgresSGA5349B77": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/Postgres_SG",
    "GroupName": "Postgres_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres_SG/Resource"
   }
  },
  "PostgresSGfromNodeApiStackNodeapiSG6CF93B3F543211358200": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow inbound 5432 for postgres db from Nodeapi",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "PostgresSGA5349B77",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "NodeapiSGA07C109D",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres_SG/from NodeApiStackNodeapiSG6CF93B3F:5432"
   }
  },
  "PostgresSGtoNodeApiStackEFSallowInbound2049SG73A3CB6A20491511A966": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "PostgresSGA5349B77",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Allow outbound 2049 for postgres db to EFS",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "EFSallowInbound2049SG521C9F79",
      "GroupId"
     ]
    },
    "FromPort": 2049,
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres_SG/to NodeApiStackEFSallowInbound2049SG73A3CB6A:2049"
   }
  },
  "IndexSGB8721386": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/Index_SG",
    "GroupName": "Index_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound 5000 to index-backend",
      "FromPort": 5000,
      "IpProtocol": "tcp",
      "ToPort": 5000
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Index_SG/Resource"
   }
  },
  "IndexSGfromNodeApiStackFrontendSG15B505145000D5AB8EFA": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow inbound 5000 from Frontend",
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "IndexSGB8721386",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "FrontendSGA609D887",
      "GroupId"
     ]
    },
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Index_SG/from NodeApiStackFrontendSG15B50514:5000"
   }
  },
  "IndexSGtoNodeApiStackNodeapiSG6CF93B3F3000EAEF76B4": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "IndexSGB8721386",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Allow outbound 3000 to Nodeapi",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "NodeapiSGA07C109D",
      "GroupId"
     ]
    },
    "FromPort": 3000,
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Index_SG/to NodeApiStackNodeapiSG6CF93B3F:3000"
   }
  },
  "FrontendSGA609D887": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/Frontend_SG",
    "GroupName": "Frontend_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend_SG/Resource"
   }
  },
  "FrontendSGtoNodeApiStackIndexSGCEC1A19450002532BF14": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "FrontendSGA609D887",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Allow outbound 5000 to index",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "IndexSGB8721386",
      "GroupId"
     ]
    },
    "FromPort": 5000,
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend_SG/to NodeApiStackIndexSGCEC1A194:5000"
   }
  },
  "FrontendSGfromNodeApiStackElbSG8CE0D65C5000B7F46980": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "FrontendSGA609D887",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ElbSG3E53E50B",
      "GroupId"
     ]
    },
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend_SG/from NodeApiStackElbSG8CE0D65C:5000"
   }
  },
  "EFSallowInbound2049SG521C9F79": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NodeApiStack/EFS_allowInbound2049_SG",
    "GroupName": "PostgresEFS_SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "EFS Filesystem to allow inbound 2049 from anywhere",
      "FromPort": 2049,
      "IpProtocol": "tcp",
      "ToPort": 2049
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/EFS_allowInbound2049_SG/Resource"
   }
  },
  "ImportedTaskExecutionRolePolicy23E279F9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PostgresTaskDefPostgresLogGroup8B3E2446",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "NodeapiTaskDefnodeapiLogGroupDFFDB24F",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "IndexTaskDefindexLogGroup2E9167AB",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FrontendTaskDeffrontendLogGroupFDDEEC5B",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FrontendTaskDefCrystalServiceProxyContdefLogGroupE8D9CE5B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedTaskExecutionRolePolicy23E279F9",
    "Roles": [
     "ecsTaskExecutionRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/ImportedTaskExecutionRole/Policy/Resource"
   }
  },
  "ImportedEcsExecTaskRolePolicy6CAEEF74": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedEcsExecTaskRolePolicy6CAEEF74",
    "Roles": [
     "000A_ecsExecTaskRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/ImportedEcsExecTaskRole/Policy/Resource"
   }
  },
  "PGEFSFileSystemFB2674A6": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "NodeApiStack/PG_EFSFileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PG_EFSFileSystem/Resource"
   }
  },
  "PGEFSFileSystemEfsMountTarget19B5123E5": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "EFSallowInbound2049SG521C9F79",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-01b1911df0ad91eb7"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PG_EFSFileSystem/EfsMountTarget1"
   }
  },
  "PGEFSFileSystemEfsMountTarget28E365451": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "EFSallowInbound2049SG521C9F79",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-02ae900ec00be7b2f"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PG_EFSFileSystem/EfsMountTarget2"
   }
  },
  "PGEFSFileSystemEfsMountTarget37EB7BC6C": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "PGEFSFileSystemFB2674A6"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "EFSallowInbound2049SG521C9F79",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-08d2609ae2ad75bcc"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PG_EFSFileSystem/EfsMountTarget3"
   }
  },
  "PostgresTaskDefTaskRole5A8B625C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PostgresTaskDef/TaskRole/Resource"
   }
  },
  "PostgresTaskDefTaskRoleDefaultPolicy5F027C47": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PostgresTaskDefTaskRoleDefaultPolicy5F027C47",
    "Roles": [
     {
      "Ref": "PostgresTaskDefTaskRole5A8B625C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PostgresTaskDef/TaskRole/DefaultPolicy/Resource"
   }
  },
  "PostgresTaskDef8C46C666": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 1792,
      "Environment": [
       {
        "Name": "POSTGRES_DB",
        "Value": "movie"
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "Value": "12345"
       }
      ],
      "Essential": true,
      "Image": "codesenju/pgmoviedb.api.local:ecs",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PostgresTaskDefPostgresLogGroup8B3E2446"
        },
        "awslogs-stream-prefix": "postgres",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 4096,
      "MountPoints": [
       {
        "ContainerPath": "/var/lib/postgresql/data",
        "ReadOnly": false,
        "SourceVolume": "PGDATA"
       }
      ],
      "Name": "Postgres",
      "PortMappings": [
       {
        "ContainerPort": 5432,
        "HostPort": 5432,
        "Name": "postgres",
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "NodeApiStackPostgresTaskDef2814AC54",
    "Memory": "5120",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "PostgresTaskDefTaskRole5A8B625C",
      "Arn"
     ]
    },
    "Volumes": [
     {
      "EFSVolumeConfiguration": {
       "FilesystemId": {
        "Ref": "PGEFSFileSystemFB2674A6"
       }
      },
      "Name": "PGDATA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PostgresTaskDef/Resource"
   }
  },
  "PostgresTaskDefPostgresLogGroup8B3E2446": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/PostgresTaskDef/Postgres/LogGroup/Resource"
   }
  },
  "PostgresService78457626": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "spot-api-capasity-provider",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "PostgresSGA5349B77",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "postgres",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "PostgresCloudmapService1B22969B",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "PostgresTaskDef8C46C666"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres/Service"
   }
  },
  "PostgresCloudmapService1B22969B": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::ImportValue": "ApiNamespaceId"
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "pgmoviedb",
    "NamespaceId": {
     "Fn::ImportValue": "ApiNamespaceId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres/CloudmapService/Resource"
   }
  },
  "PostgresTaskCountTarget912DD5E3": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/api/",
       {
        "Fn::GetAtt": [
         "PostgresService78457626",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::587878432697:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres/TaskCount/Target/Resource"
   }
  },
  "PostgresTaskCountTargetCpuScaling863F7E95": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "NodeApiStackPostgresTaskCountTargetCpuScalingEE3C3B6A",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "PostgresTaskCountTarget912DD5E3"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Postgres/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "NodeapiTaskDef9CAD3311": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 256,
      "Environment": [
       {
        "Name": "DB_HOST",
        "Value": "pgmoviedb.api.local"
       },
       {
        "Name": "DB_PASSWORD",
        "Value": "12345"
       },
       {
        "Name": "DB_NAME",
        "Value": "movie"
       },
       {
        "Name": "DB_USERNAME",
        "Value": "postgres"
       }
      ],
      "Essential": true,
      "Image": "codesenju/nodeapi.api.local:ecs",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "NodeapiTaskDefnodeapiLogGroupDFFDB24F"
        },
        "awslogs-stream-prefix": "nodeapi",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 512,
      "Name": "nodeapi",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Name": "nodeapi",
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "NodeApiStackNodeapiTaskDef3A97DF85",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": "arn:aws:iam::587878432697:role/000A_ecsExecTaskRole"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/NodeapiTaskDef/Resource"
   }
  },
  "NodeapiTaskDefnodeapiLogGroupDFFDB24F": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/NodeapiTaskDef/nodeapi/LogGroup/Resource"
   }
  },
  "NodeapiServiceED3ECEE4": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "spot-api-capasity-provider",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "NodeapiSGA07C109D",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "nodeapi",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "NodeapiCloudmapServiceDA7CB468",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "NodeapiTaskDef9CAD3311"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi/Service"
   }
  },
  "NodeapiCloudmapServiceDA7CB468": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::ImportValue": "ApiNamespaceId"
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "nodeapi",
    "NamespaceId": {
     "Fn::ImportValue": "ApiNamespaceId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi/CloudmapService/Resource"
   }
  },
  "NodeapiTaskCountTargetCCDA0A70": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/api/",
       {
        "Fn::GetAtt": [
         "NodeapiServiceED3ECEE4",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::587878432697:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi/TaskCount/Target/Resource"
   }
  },
  "NodeapiTaskCountTargetCpuScalingA6F64E36": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "NodeApiStackNodeapiTaskCountTargetCpuScalingCDF27440",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "NodeapiTaskCountTargetCCDA0A70"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Nodeapi/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "IndexTaskDef7FDDA5D5": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 256,
      "Essential": true,
      "Image": "codesenju/index.api.local:ecs",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "IndexTaskDefindexLogGroup2E9167AB"
        },
        "awslogs-stream-prefix": "index",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 512,
      "Name": "index",
      "PortMappings": [
       {
        "ContainerPort": 5000,
        "Name": "index",
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "NodeApiStackIndexTaskDefCED089E6",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": "arn:aws:iam::587878432697:role/000A_ecsExecTaskRole"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/IndexTaskDef/Resource"
   }
  },
  "IndexTaskDefindexLogGroup2E9167AB": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/IndexTaskDef/index/LogGroup/Resource"
   }
  },
  "IndexService427E9591": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "spot-api-capasity-provider",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "IndexSGB8721386",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "index",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "IndexCloudmapService77ACFD31",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "IndexTaskDef7FDDA5D5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Index/Service"
   }
  },
  "IndexCloudmapService77ACFD31": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::ImportValue": "ApiNamespaceId"
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "index",
    "NamespaceId": {
     "Fn::ImportValue": "ApiNamespaceId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Index/CloudmapService/Resource"
   }
  },
  "FrontendTaskDef7D3FD156": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 256,
      "DependsOn": [
       {
        "Condition": "HEALTHY",
        "ContainerName": "envoy"
       }
      ],
      "Essential": true,
      "Image": "codesenju/frontend.api.local:ecs",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FrontendTaskDeffrontendLogGroupFDDEEC5B"
        },
        "awslogs-stream-prefix": "frontend",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 512,
      "Name": "frontend",
      "PortMappings": [
       {
        "ContainerPort": 5000,
        "HostPort": 5000,
        "Name": "frontend",
        "Protocol": "tcp"
       }
      ]
     },
     {
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       },
       {
        "Name": "ENVOY_LOG_LEVEL",
        "Value": "debug"
       },
       {
        "Name": "ENABLE_ENVOY_STATS_TAGS",
        "Value": "1"
       },
       {
        "Name": "APPMESH_RESOURCE_ARN",
        "Value": {
         "Fn::ImportValue": "FrontendVnArn"
        }
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
       ],
       "Interval": 5,
       "Retries": 10,
       "Timeout": 10
      },
      "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:arm64-v1.24.2.0-prod",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FrontendTaskDefCrystalServiceProxyContdefLogGroupE8D9CE5B"
        },
        "awslogs-stream-prefix": "/frontend-mesh-envoy-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 128,
      "Name": "envoy",
      "Ulimits": [
       {
        "HardLimit": 15000,
        "Name": "nofile",
        "SoftLimit": 15000
       }
      ],
      "User": "1337"
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "NodeApiStackFrontendTaskDefDDA827C3",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": "arn:aws:iam::587878432697:role/000A_ecsExecTaskRole"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendTaskDef/Resource"
   }
  },
  "FrontendTaskDeffrontendLogGroupFDDEEC5B": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendTaskDef/frontend/LogGroup/Resource"
   }
  },
  "FrontendTaskDefCrystalServiceProxyContdefLogGroupE8D9CE5B": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendTaskDef/CrystalServiceProxyContdef/LogGroup/Resource"
   }
  },
  "FrontendService8B3C6A55": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "spot-api-capasity-provider",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "HealthCheckGracePeriodSeconds": 300,
    "LoadBalancers": [
     {
      "ContainerName": "frontend",
      "ContainerPort": 5000,
      "TargetGroupArn": {
       "Ref": "FrontendLoadBalancerFrontendListenerFrontendTargetsGroup80B6629B"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "FrontendSGA609D887",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "SchedulingStrategy": "REPLICA",
    "ServiceName": "frontend",
    "TaskDefinition": {
     "Ref": "FrontendTaskDef7D3FD156"
    }
   },
   "DependsOn": [
    "FrontendLoadBalancerFrontendListenerFrontendTargetsGroup80B6629B",
    "FrontendLoadBalancerFrontendListenerCF68BDEA"
   ],
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend/Service"
   }
  },
  "FrontendTaskCountTargetC428911A": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/api/",
       {
        "Fn::GetAtt": [
         "FrontendService8B3C6A55",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::587878432697:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend/TaskCount/Target/Resource"
   }
  },
  "FrontendTaskCountTargetCpuScalingC3082A72": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "NodeApiStackFrontendTaskCountTargetCpuScalingB405B42E",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "FrontendTaskCountTargetC428911A"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "TargetValue": 60
    }
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/Frontend/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "FrontendLoadBalancerDBDBDFF7": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ElbSG3E53E50B",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     "subnet-0a6cb385222142b7f",
     "subnet-04b96da3213c9da46",
     "subnet-02d97f91df8f209b0"
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendLoadBalancer/Resource"
   }
  },
  "FrontendLoadBalancerFrontendListenerCF68BDEA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "FrontendLoadBalancerFrontendListenerFrontendTargetsGroup80B6629B"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "FrontendLoadBalancerDBDBDFF7"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendLoadBalancer/FrontendListener/Resource"
   }
  },
  "FrontendLoadBalancerFrontendListenerFrontendTargetsGroup80B6629B": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/health",
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/FrontendLoadBalancer/FrontendListener/FrontendTargetsGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S207DMAz9lr1nAQ0NiUcYAyENMa17R1nmFbM0qXIZqqr8O06zSzsknmKfc+wTO5nw6ZTfjsSPG8vtfqxww9vCC7lnK3AmWAmMuM8W5IQIkMGib16tCTWb7fT/wLy04Nwf+E13eGQoKt4ujULZJNExWhkFKU1nZLBzvH1BBUXjPFSJGGbvJmi/FrYET2pJ6rVw+2fYoUaPRifNNWK0F6jB9rC5nBRgDygh3zeHhRRKbBSkBrNkFJkyJXksTHme+RRH5nLZFp00B7BN2th1z8hEXdOgItmK4I0jD9Qlac9maZiuZIjkY23pdaigyHWX/Q0A2oUSzqNURmw31EZL4g70iI8X+wVxTx0HNk/Sy/s6pG3ro+YU9/h8sfNCemmMCfgIvg7dRKdPFdmy8V9G39zxB34/+naIY0v7xQr4Kp+/crzvIpoCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "NodeApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "PostgresServiceArn": {
   "Value": {
    "Ref": "PostgresService78457626"
   },
   "Export": {
    "Name": "PostgresServiceArn"
   }
  },
  "PostgresServiceId": {
   "Value": {
    "Fn::GetAtt": [
     "PostgresCloudmapService1B22969B",
     "Id"
    ]
   },
   "Export": {
    "Name": "PostgresServiceId"
   }
  },
  "NodeapiServiceArn": {
   "Value": {
    "Ref": "NodeapiServiceED3ECEE4"
   },
   "Export": {
    "Name": "NodeapiServiceArn"
   }
  },
  "NodeapiServiceId": {
   "Value": {
    "Fn::GetAtt": [
     "NodeapiCloudmapServiceDA7CB468",
     "Id"
    ]
   },
   "Export": {
    "Name": "NodeapiServiceId"
   }
  },
  "IndexServiceArn": {
   "Value": {
    "Ref": "IndexService427E9591"
   },
   "Export": {
    "Name": "IndexServiceArn"
   }
  },
  "IndexServiceId": {
   "Value": {
    "Fn::GetAtt": [
     "IndexCloudmapService77ACFD31",
     "Id"
    ]
   },
   "Export": {
    "Name": "IndexServiceId"
   }
  },
  "FrontendServiceArn": {
   "Value": {
    "Ref": "FrontendService8B3C6A55"
   },
   "Export": {
    "Name": "FrontendServiceArn"
   }
  },
  "FrontendServiceId": {
   "Value": {
    "Fn::GetAtt": [
     "IndexCloudmapService77ACFD31",
     "Id"
    ]
   },
   "Export": {
    "Name": "FrontendServiceId"
   }
  },
  "FrontendElbDnsName": {
   "Value": {
    "Fn::GetAtt": [
     "FrontendLoadBalancerDBDBDFF7",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "LoadBalancerDnsName"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}